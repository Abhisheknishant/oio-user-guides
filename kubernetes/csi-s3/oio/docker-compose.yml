version: '2.4'

services:
  openio-server:
    image: openio/sds:19.10
    restart: unless-stopped
    networks:
      oio_net:
        ipv4_address: 10.0.4.10
    labels:
      - traefik.enable=true
      # Listen for HTTPS incoming requests with all hostnames (certificate configured with file based static configuration)
      - traefik.http.routers.oiosecure.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.oiosecure.tls=true
      - traefik.http.routers.oiosecure.entrypoints=s3
      - traefik.http.services.oiosecure.LoadBalancer.server.Port=6007
      # Force HTTP to HTTPS redirects
      - traefik.http.routers.oio.rule=hostregexp(`{host:.+}`)
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.port=6007
      - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true
      - traefik.http.routers.oio.entrypoints=s3
      - traefik.http.routers.oio.middlewares=redirect-to-https
  
  s3-reverse-proxy:
    image: traefik:v2.1
    command:
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/traefik-dyn.yml
      - --entryPoints.s3.address=:6007
    restart: unless-stopped
    networks:
      oio_net:
        ipv4_address: 10.0.4.40
    ports:
      - "6007:6007"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certificates:/certs:ro
      - ./traefik-dyn.yml:/traefik-dyn.yml:ro
    depends_on:
      - certificates-generator
  
  certificates-generator:
    build: ./
    user: root
    command: sh -c "rm -f /exportcerts/* && cp /certs/* /exportcerts"
    restart: on-failure
    volumes:
      - certificates:/certs:ro
      - /certificates:/exportcerts:rw

# OpenIO requires static IP per service
networks:
  oio_net:
    ipam:
      driver: default
      config:
        - subnet: "10.0.4.0/24"

# Sharing certificate between containers
volumes:
  certificates:
